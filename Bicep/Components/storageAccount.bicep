@description('location of resource group.')
param location string = resourceGroup().location

@maxLength(24)
@description('The name of the Storage Account with dashes - as generated by the naming function')
param storageAccountName string

@allowed([
  'BlobStorage'
  'BlockBlobStorage'
  'FileStorage'
  'Storage'
  'StorageV2'
])
@description('Required. Indicates the type of storage account.')
param storageAccountKind string = 'StorageV2'

@allowed([
  'Standard_LRS'
  'Standard_GRS'
  'Standard_RAGRS'
  'Standard_ZRS'
  'Premium_LRS'
  'Premium_ZRS'
  'Standard_GZRS'
  'Standard_RAGZRS'
])
@description('Type of the Storage Account (SKU).')
param storageAccountSKU string = 'Premium_ZRS'

@allowed([
  'Hot'
  'Cool'
])
@description('The default acceess tier on the Storage Account level')
param storageAccountAccessTier string = 'Hot'

@description('When Enabled this will be an Azure Data Lake Gen2 account.')
param storageAccountIsHnsEnabled bool = false

@description('Enables NFS version 3 support. Requires HNS enabled.')
param storageAccountIsNfsV3Enabled bool = false

@description('Enables SFTPupport. Requires HNS enabled.')
param storageAccountIsSftpEnabled bool = false

@description('When Enabled this will allow configuring ACLs for public access.')
param allowBlobPublicAccess bool = false

var staName = replace(storageAccountName, '-', '')

resource storageAccount 'Microsoft.Storage/storageAccounts@2022-09-01' = {
  name: staName
  location: location
  sku: {
    name: storageAccountSKU
  }
  kind: storageAccountKind
  properties: {
    isHnsEnabled: storageAccountIsHnsEnabled
    isNfsV3Enabled: storageAccountIsNfsV3Enabled
    isSftpEnabled: storageAccountIsSftpEnabled
    allowBlobPublicAccess: allowBlobPublicAccess
    minimumTlsVersion: 'TLS1_2'
    supportsHttpsTrafficOnly: true
    accessTier: storageAccountAccessTier
    largeFileSharesState:'Enabled'
    networkAcls: {
      bypass: 'AzureServices'
      defaultAction: 'Deny'
    }
    encryption: {
      keySource: 'Microsoft.Storage'
      requireInfrastructureEncryption: true
    }
  }
}

output self object = storageAccount
