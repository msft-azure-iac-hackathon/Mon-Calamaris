name: LZ Main Module
on:
  push:
      branches: [ main ]
      paths:
        - 'ARMtempaltes/**'
        - 'CRML/**'
        - '/modules/**'
        - 'orchestration/**'
  workflow_dispatch:


jobs:
  deploy-management-groups:
    uses: ./.github/workflows/managementGroups.yml
    with: 
      az_powershell_min_version: ${{ vars.AZ_POWERSHELL_MIN_VERSION }}
    secrets: inherit

  # deploy-policy-definitions:
  #   uses: ./.github/workflows/policyDefinitions.yml
  #   needs: deploy-management-groups
  #   with: 
  #     az_powershell_min_version: ${{ vars.AZ_POWERSHELL_MIN_VERSION }}
  #     Mon_Calamaris_MG_Resource_Id: ${{ needs.deploy-management-groups.outputs.Mon_Calamaris_MG_Resource_Id }}
  #     Platform_MG_Resource_Id: ${{ needs.deploy-management-groups.outputs.Platform_MG_Resource_Id }}
  #     Connectivity_MG_Resource_Id: ${{ needs.deploy-management-groups.outputs.Connectivity_MG_Resource_Id }}
  #     Identity_MG_Resource_Id: ${{ needs.deploy-management-groups.outputs.Identity_MG_Resource_Id }}
  #     Management_MG_Resource_Id: ${{ needs.deploy-management-groups.outputs.Management_MG_Resource_Id }}
  #     Landing_Zones_MG_Resource_Id: ${{ needs.deploy-management-groups.outputs.Landing_Zones_MG_Resource_Id }}
  #     Corp_MG_Resource_Id: ${{ needs.deploy-management-groups.outputs.Corp_MG_Resource_Id }}
  #     Online_MG_Resource_Id: ${{ needs.deploy-management-groups.outputs.Online_MG_Resource_Id }}
  #     Decommisioned_MG_Resource_Id: ${{ needs.deploy-management-groups.outputs.Decommisioned_MG_Resource_Id }}
  #     Sandbox_MG_Resource_Id: ${{ needs.deploy-management-groups.outputs.Sandbox_MG_Resource_Id }}
  #     Top_Management_Group_Id: ${{ needs.deploy-management-groups.outputs.Top_Management_Group_Id }}
  #   secrets: inherit

  # custom-rbac-role-definitions:
  #   uses: ./.github/workflows/custom-rbac-role-definitions.yml
  #   needs: deploy-management-groups
  #   with:
  #     Top_Management_Group_Id: ${{ needs.deploy-management-groups.outputs.Top_Management_Group_Id }}
  #   secrets: inherit

  # deploy-logging:
  #   uses: ./.github/workflows/deploy-logging.yml
  #   needs: [deploy-management-groups, deploy-policy-definitions]
  #   with:
  #     Subscription_Id: 'a130bdfe-b3db-4b2c-bc99-01f44d7e657e'
  #   secrets: inherit

  deploy-hubNetworking:
    uses: ./.github/workflows/hubNetworking.yml
    needs: [deploy-management-groups]
    with:
      Subscription_Id: 'e89c90e4-9342-4dae-87a6-8bac02578b58'
    secrets: inherit

  # policy-assignments:
  #   uses: ./.github/workflows/policyAssignments.yml
  #   needs: [deploy-management-groups, deploy-policy-definitions, deploy-logging]
  #   with:
  #     az_powershell_min_version: ${{ vars.AZ_POWERSHELL_MIN_VERSION }} 
  #     Mon_Calamaris_MG_Resource_Id: ${{ needs.deploy-management-groups.outputs.Mon_Calamaris_MG_Resource_Id }}
  #     Platform_MG_Resource_Id: ${{ needs.deploy-management-groups.outputs.Platform_MG_Resource_Id }}
  #     Connectivity_MG_Resource_Id: ${{ needs.deploy-management-groups.outputs.Connectivity_MG_Resource_Id }}
  #     Identity_MG_Resource_Id: ${{ needs.deploy-management-groups.outputs.Identity_MG_Resource_Id }}
  #     Management_MG_Resource_Id: ${{ needs.deploy-management-groups.outputs.Management_MG_Resource_Id }}
  #     Landing_Zones_MG_Resource_Id: ${{ needs.deploy-management-groups.outputs.Landing_Zones_MG_Resource_Id }}
  #     Corp_MG_Resource_Id: ${{ needs.deploy-management-groups.outputs.Corp_MG_Resource_Id }}
  #     Online_MG_Resource_Id: ${{ needs.deploy-management-groups.outputs.Online_MG_Resource_Id }}
  #     Decommisioned_MG_Resource_Id: ${{ needs.deploy-management-groups.outputs.Decommisioned_MG_Resource_Id }}
  #     Sandbox_MG_Resource_Id: ${{ needs.deploy-management-groups.outputs.Sandbox_MG_Resource_Id }}
  #     Top_Management_Group_Id: ${{ needs.deploy-management-groups.outputs.Top_Management_Group_Id }}
  #     LogAnalytics_Workspace_Id: ${{needs.deploy-logging.outputs.LogAnalyticsWorkspaceId}}
  #     #LogAnalytics_Customer_Id: ${{needs.deploy-logging.outputs.outLogAnalyticsCustomerId}}
  #     #LogAnalytics_Solutions: ${{needs.deploy-logging.outputs.outLogAnalyticsSolutions}}
  #     #Automation_Account_Id: ${{needs.deploy-logging.outputs.outAutomationAccount.id}}
  #     #Automation_Account_Name: ${{needs.deploy-logging.outputs.outAutomationAccount.name}}
  #   secrets: inherit

  # deploy-diagnostic:
  #   uses: ./.github/workflows/diagnostics-settings.yml
  #   needs: [deploy-logging, deploy-management-groups]
  #   with:
  #     Subscription_Id: 'a130bdfe-b3db-4b2c-bc99-01f44d7e657e'
  #     TopLevelManagementGroupPrefix: 'mon-calamaris'
  #     Top_Management_Group_Id: ${{ needs.deploy-management-groups.outputs.Top_Management_Group_Id }}
  #     LogAnalyticsWorkspaceResourceId: ${{ needs.deploy-logging.outputs.LogAnalyticsWorkspaceId }}
  #   secrets: inherit

  deploy-hub-peered-spoke:
    uses: ./.github/workflows/spokeNetworking.yml
    needs: [deploy-hubNetworking, deploy-management-groups]
    with:
      Subscription_Id: 'a130bdfe-b3db-4b2c-bc99-01f44d7e657e'
      ManagementGroupId: ${{ needs.deploy-management-groups.outputs.Top_Management_Group_Id }}
      VirtualNetworkId: ${{ needs.deploy-hubNetworking.outputs.VirtualHubId }}
    secrets: inherit